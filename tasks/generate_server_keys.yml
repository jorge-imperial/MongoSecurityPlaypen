---
#
# Generate TLS/SSL CA & server key/cert files for encryption over the wire
# 

- name: Set FIPS env variable for running OpenSSL
  include_tasks: set_openssl_fips_var.yml

- name: One time create the private key for the root CA and then self-sign the root CA's certificate
  shell: /usr/bin/openssl {{ item }}
  environment:
    OPENSSL_FIPS: "{{ fips_flag }}"
  with_items:
    - genrsa -aes256 -passout pass:{{ tls_ca_key_passwd }} -out /vagrant/tmp/mongodbca.key 2048
    - req -x509 -new -nodes -key /vagrant/tmp/mongodbca.key -passin pass:{{ tls_ca_key_passwd }} -newkey rsa:2048 -days 1024 -out /vagrant/tmp/mongodbca.pem -subj "{{ server_dn_prefix }}TestTLSCA"
  when: ansible_hostname == "dbnode3"

- name: Copy root CA files over to host, restricting permissions but allowing CA file to be readable to all
  copy: src=tmp/{{ item }} dest=/etc/ssl/{{ item }} owner=mongod group=mongod mode=0400
  with_items:
    - mongodbca.key
    - mongodbca.pem
- file: path=/etc/ssl/mongodbca.pem owner=mongod group=mongod mode=0444

- name: Create private key for server, create a certificate signing request for it and sign the CSR using the CA root key
  shell: /usr/bin/openssl {{ item }}
  environment:
    OPENSSL_FIPS: "{{ fips_flag }}"
  with_items:
    - genrsa -out /etc/ssl/mongodb.key 2048
    - req -new -key /etc/ssl/mongodb.key -out /etc/ssl/mongodb.csr -subj "{{ server_dn_prefix }}{{ ansible_hostname }}.vagrant.dev"
    - x509 -req -in /etc/ssl/mongodb.csr -CA /etc/ssl/mongodbca.pem -CAkey /etc/ssl/mongodbca.key -passin pass:{{ tls_ca_key_passwd }} -CAcreateserial -extfile /vagrant/files/ssl/ssl_extns.cfg -extensions v3_req -out /etc/ssl/mongodb.crt -days 500

- name: Concatenate TLS/SSL server certificate and key together
  shell: cat /etc/ssl/mongodb.key /etc/ssl/mongodb.crt > /etc/ssl/mongodb.pem

- name: Restrict permissions on server certificate and key
  file: path=/etc/ssl/{{ item }} owner=mongod group=mongod mode=0400
  with_items:
    - mongodb.key
    - mongodb.csr
    - mongodb.crt
    - mongodb.pem

