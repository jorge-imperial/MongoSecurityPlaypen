---
- name: Configure and start replica set via first MongoDB instance
  hosts: all
  vars_files:
    - vars/external_vars.yml
  become: yes
  become_method: sudo
  become_user: mongod
  tasks:
    - name: Set Mongo Shell command line params
      include_tasks: tasks/set_mongoshell_params.yml

    - name: Set the Ceritifcate/LDAP Distinguished Names
      include_tasks: tasks/set_distinguished_names.yml

    - name: Obtain Kerberos ticket for MongoDB admin user to be able to connect to replica set
      shell: echo {{ db_adminuser_password }} | kinit {{ db_adminuser_name }} -V
      when: client_auth_method == "kerberos"

    - name: Template Mongo Shell JavaScript files into local /tmp dir
      template: src=files/mongoshell/{{item}}.j2 dest=/tmp/{{item}} mode=u+rw
      with_items:
        - configure_replicaset.js
        - create_admin_user_or_rolemapping.js
        - generate_sampledata.js
        - create_normal_user_and_role.js
        - reset_priorities.js

    - name: Configure replica set cluster waiting until the primary has come up properly
      command: mongo {{ connect_string }} /tmp/configure_replicaset.js

    - name: Run Mongo shell scripts for creating users and sample data
      command: mongo {{ connect_string }} /tmp/{{ item }}
      with_items:
        - create_admin_user_or_rolemapping.js
        - generate_sampledata.js
        - create_normal_user_and_role.js
        - reset_priorities.js

    - name: Clean up all temporarily generated files
      file: path=/tmp/{{ item }} state=absent
      with_items:
        - configure_replicaset.js
        - create_admin_user_or_rolemapping.js
        - generate_sampledata.js
        - create_normal_user_and_role.js
        - reset_priorities.js

